require('dotenv').config(); const WebSocket = require('ws'); const axios = require('axios');

const BINANCE_WS_URL = 'wss://stream.binance.com:9443/ws/!miniTicker@arr'; const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN; const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID; const THRESHOLD = parseFloat(process.env.THRESHOLD_PERCENT || '2');

const ws = new WebSocket(BINANCE_WS_URL); let prices = {};

ws.on('open', () => console.log('‚úÖ Connected to Binance WebSocket'));

ws.on('message', async (data) => { const tickers = JSON.parse(data); const now = Date.now();

tickers.forEach(ticker => {
    if (!ticker.s.endsWith('USDT')) return;

    const symbol = ticker.s;
    const price = parseFloat(ticker.c);

    if (!prices[symbol]) {
        prices[symbol] = [];
    }

    prices[symbol].push({ time: now, price });

    // Keep history for 10 minutes
    prices[symbol] = prices[symbol].filter(p => now - p.time <= 10 * 60 * 1000);

    [1, 5, 10].forEach(minutes => {
        const past = prices[symbol].find(p => now - p.time >= minutes * 60 * 1000);
        if (past) {
            const change = ((price - past.price) / past.price) * 100;
            if (Math.abs(change) >= THRESHOLD) {
                sendTelegramAlert(symbol, change, minutes);
            }
        }
    });
});

});

async function sendTelegramAlert(symbol, change, minutes) { const text = ‚ö†Ô∏è ${symbol} moved ${change.toFixed(2)}% in ${minutes} min;

try {
    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        chat_id: TELEGRAM_CHAT_ID,
        text: text
    });
    console.log('üì© Alert sent:', text);
} catch (err) {
    console.error('‚ùå Error sending alert', err.message);
}

}

